{
      title: "Activity",
      dataIndex: "items",
      render: (items) => {
        let item = items.find((item) => item?.process_tags);
        return item?.process_tags.length > 0 ? (
          <Button
            icon={ClockMajor}
            plain
            monochrome
            removeUnderline
            onClick={() =>
              setActivityModal({
                open: true,
                data: item.process_tags,
                type: "product",
              })
            }
          >
            <Stack>
              <Text>in Progress</Text>
            </Stack>
          </Button>
        ) : (
          <Text> -- </Text>
        );
      },
      width: "120px",
    },




import { Card, Icon, Modal, Stack, Text } from "@shopify/polaris";
import React from "react";
import { ReportMinor } from "@shopify/polaris-icons";
import { useDispatch, useSelector } from "react-redux";
import { setQueryStirng } from "../../../../redux/FiltersReducer";
const ActivityModal = ({ activityModal, setActivityModal }) => {
  const queryString = useSelector((state) => state.FiltersReducer.queryString);
  const dispatch = useDispatch();

  const handleActivityModal = () =>
    setActivityModal((prev) => {
      return { ...prev, open: false };
    });

  return (
    <Modal
      open={activityModal.open}
      onClose={handleActivityModal}
      primaryAction={{
        content: "Refresh to update status",
        onAction: () => {
          handleActivityModal();
          dispatch(setQueryStirng(queryString+" "));
        },
      }}
      secondaryActions={{
        content: "Close",
        onAction: handleActivityModal,
      }}
      title="Actions in progress"
    >
      <Card sectioned>
        {activityModal.data?.map((msg) => (
          <Stack>
            <Icon source={ReportMinor} color="base" />
            <Text color="subdued">{msg}</Text>
          </Stack>
        ))}
      </Card>
    </Modal>
  );
};

export default ActivityModal;
